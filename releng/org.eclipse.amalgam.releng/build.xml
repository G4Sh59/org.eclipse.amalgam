<?xml version="1.0"?>
<project default="main" basedir=".">
	
	<target name="init">
		<tstamp/>
		<property name="date" value="${DSTAMP}"/>
		<property name="time" value="${TSTAMP}"/>
		<!-- TODO: find a better way obtain from product definition and pass to build below -->
		<property name="productVersion" value="1.0.0.v${date}${time}"/>
		
		<property name="buildRoot" value="${user.home}/build"/>
		<property name="builderTag" value="HEAD"/>
		<property name="basebuilder" value="${buildRoot}/basebuilder"/>
	</target>
	
	<target name="main" depends="init">
		<antcall target="fetch.builder"/>
		<antcall target="build.product">
			<param name="target" value="dsltk"/>
			<param name="buildDirectory" value="${buildRoot}/dsltk"/>
		</antcall>
		<antcall target="build.product">
			<param name="target" value="modeler"/>
			<param name="buildDirectory" value="${buildRoot}/modeler"/>
		</antcall>
	</target>
	
	<target name="fetch.builder"> 
		<!-- No director app in normal basebuilder, so just use SDK and extract deltapack into it -->
		<get src="${eclipseBaseURL}" dest="${buildRoot}/base.tar.gz" verbose="true" usetimestamp="true"/>
		<mkdir dir="${basebuilder}"/>
		<exec executable="tar">
			<arg line="-xzf"/>
			<arg line="${buildRoot}/base.tar.gz"/>
			<arg line="-C ${basebuilder}"/>
		</exec>
		<antcall target="install.delta.pack"/>
	</target>
	
	<target name="install.delta.pack">
		<available file="${buildRoot}/deltapack.zip" property="skipDeltaPack" />
		<antcall target="get.delta.pack"/>
		<unzip src="${buildRoot}/deltapack.zip" dest="${basebuilder}"/>
	</target>
	
	<target name="get.delta.pack" unless="skipDeltaPack">
		<get src="${deltaPackURL}" dest="${buildRoot}/deltapack.zip" verbose="true" usetimestamp="true" />
	</target>
	
	<target name="build.product">	
		<cvs command="checkout" cvsRoot=":pserver:anonymous@dev.eclipse.org:/cvsroot/modeling"
			 package="org.eclipse.amalgam/releng/org.eclipse.amalgam.releng/builder/${target}" dest="${buildRoot}/${target}/builder" tag="${builderTag}" />
		<copy todir="${buildRoot}/${target}/builder"> 
			<fileset dir="${buildRoot}/${target}/builder/org.eclipse.amalgam/releng/org.eclipse.amalgam.releng/builder/${target}"/>
		</copy>
		<delete dir="${buildRoot}/${target}/builder/org.eclipse.amalgam" />
		<property file="${buildRoot}/${target}/builder/build.properties"/>
		
		<!-- First, run normal product build to fetch, compile, and generate metadata repository for p2 build -->
		<exec executable="${basebuilder}/eclipse/eclipse" dir="${buildDirectory}/builder" failonerror="true">
			<arg line="-application org.eclipse.ant.core.antRunner"/>
			<arg line="-buildfile ${basebuilder}/eclipse/plugins/org.eclipse.pde.build_${pde.build.version}/scripts/productBuild/productBuild.xml" />
			<arg line="-nosplash" />
			<arg line="--launcher.suppressErrors" />
			<arg line="-consoleLog" />
			<arg line="-vmargs"/>
			<arg line="-Xmx1024m" />
			<arg value="-Dbuilder=${buildDirectory}/builder"/>
			<arg value="-DbuildDirectory=${buildDirectory}"/>
			<arg value="-Dbase=${base}"/>
			<arg value="-DbaseLocation=${baseLocation}"/>
			<arg value="-Dtimestamp=${timestamp}"/>
			<arg value="-DbuildType=${buildType}"/>
			<arg value="-DbuildId=${buildId}"/>
			<arg value="-DbuildLabel=${buildLabel}"/>
		</exec>
				
		<!-- Invoke p2 product installation here - no need to do within customTargets, actually -->
		<!-- note that there's a p2.director ant task, though not complete? -->
		<mkdir dir="${buildDirectory}/${buildLabel}/p2/tmp/win32.win32.x86/${archivePrefix}" />
		<antcall target="run.director">
			<param name="p2.director.install.path" value="${buildDirectory}/${buildLabel}/p2/tmp/win32.win32.x86/${archivePrefix}"/>
			<param name="p2.os" value="win32"/>
			<param name="p2.ws" value="win32"/>
			<param name="p2.arch" value="x86"/>
			<param name="p2.version" value="${productVersion}"/>
		</antcall>
		
		<!-- FIXME: workaround for bug 237662 (org.eclipse.core.runtime start level wrong in bundles.info) -->
		<replace file="${buildDirectory}/${buildLabel}/p2/tmp/win32.win32.x86/${archivePrefix}/configuration/org.eclipse.equinox.simpleconfigurator/bundles.info" 
			token="file:plugins/org.eclipse.core.runtime_3.4.0.v20080512.jar,4,false" 
			value="file:plugins/org.eclipse.core.runtime_3.4.0.v20080512.jar,4,true"/>
		
		<zip destfile="${buildDirectory}/${buildLabel}/p2/${archiveNamePrefix}.win32.win32.x86.zip" basedir="${buildDirectory}/${buildLabel}/p2/tmp/win32.win32.x86/${archivePrefix}" />
		
		
		<mkdir dir="${buildDirectory}/${buildLabel}/p2/tmp/linux.gtk.x86/${archivePrefix}" />
		<antcall target="run.director">
			<param name="p2.director.install.path" value="${buildDirectory}/${buildLabel}/p2/tmp/linux.gtk.x86/${archivePrefix}"/>
			<param name="p2.os" value="linux"/>
			<param name="p2.ws" value="gtk"/>
			<param name="p2.arch" value="x86"/>
			<param name="p2.version" value="${productVersion}"/>
		</antcall>
		
		<!-- FIXME: workaround for bug 237662 (org.eclipse.core.runtime start level wrong in bundles.info) -->
		<replace file="${buildDirectory}/${buildLabel}/p2/tmp/linux.gtk.x86/${archivePrefix}/configuration/org.eclipse.equinox.simpleconfigurator/bundles.info" 
			token="file:plugins/org.eclipse.core.runtime_3.4.0.v20080512.jar,4,false" 
			value="file:plugins/org.eclipse.core.runtime_3.4.0.v20080512.jar,4,true"/>
		
		<exec executable="tar" dir="${buildDirectory}/${buildLabel}/p2/tmp/linux.gtk.x86/">
			<arg line="${tarargs}-cf ${buildDirectory}/${buildLabel}/p2/${archiveNamePrefix}.linux.gtk.x86.tar ${archivePrefix}"/>
		</exec>
		<gzip src="${buildDirectory}/${buildLabel}/p2/${archiveNamePrefix}.linux.gtk.x86.tar" zipfile="${buildDirectory}/${buildLabel}/p2/${archiveNamePrefix}.linux.gtk.x86.tar.gz"/>
		<delete file="${buildDirectory}/${buildLabel}/p2/${archiveNamePrefix}.linux.gtk.x86.tar" />
		
		
		<mkdir dir="${buildDirectory}/${buildLabel}/p2/tmp/macosx.carbon.x86/${archivePrefix}" />
		<antcall target="run.director">
			<param name="p2.director.install.path" value="${buildDirectory}/${buildLabel}/p2/tmp/macosx.carbon.x86/${archivePrefix}"/>
			<param name="p2.os" value="macosx"/>
			<param name="p2.ws" value="carbon"/>
			<param name="p2.arch" value="x86"/>
			<param name="p2.version" value="${productVersion}"/>
		</antcall>

		<!-- FIXME: workaround for leftover Eclipse.app when launcher is different from default (but first, copy correct .ini file) -->
		<copy file="${buildDirectory}/${buildLabel}/p2/tmp/macosx.carbon.x86/${archivePrefix}/Eclipse.app/Contents/MacOS/eclipse.ini" 
					  tofile="${buildDirectory}/${buildLabel}/p2/tmp/macosx.carbon.x86/${archivePrefix}/${archivePrefix}.app/Contents/MacOS/${archivePrefix}.ini" overwrite="true"/>
		<delete dir="${buildDirectory}/${buildLabel}/p2/tmp/macosx.carbon.x86/${archivePrefix}/Eclipse.app" /> 
		
		<!-- FIXME: workaround for bug 237662 (org.eclipse.core.runtime start level wrong in bundles.info) -->
		<replace file="${buildDirectory}/${buildLabel}/p2/tmp/macosx.carbon.x86/${archivePrefix}/configuration/org.eclipse.equinox.simpleconfigurator/bundles.info" 
			token="file:plugins/org.eclipse.core.runtime_3.4.0.v20080512.jar,4,false" 
			value="file:plugins/org.eclipse.core.runtime_3.4.0.v20080512.jar,4,true"/> 
		
		<exec executable="tar" dir="${buildDirectory}/${buildLabel}/p2/tmp/macosx.carbon.x86/">
			<arg line="${tarargs}-cf ${buildDirectory}/${buildLabel}/p2/${archiveNamePrefix}.macosx.carbon.x86.tar ${archivePrefix}"/>
		</exec>
		<gzip src="${buildDirectory}/${buildLabel}/p2/${archiveNamePrefix}.macosx.carbon.x86.tar" zipfile="${buildDirectory}/${buildLabel}/p2/${archiveNamePrefix}.macosx.carbon.x86.tar.gz"/>
		<delete file="${buildDirectory}/${buildLabel}/p2/${archiveNamePrefix}.macosx.carbon.x86.tar" />
		<delete dir="${buildDirectory}/${buildLabel}/p2/tmp"/>
		
		<!-- TODO: delete unused product zips and move /p2 directory artifacts up ... OR, just delete them first and build p2 artifacts in root? -->
	</target>
	
	<target name="run.director"> <!-- Note, there is a p2.director Ant task, but apparently not complete -->
		<exec executable="${basebuilder}/eclipse/eclipse" failonerror="false">
			<arg line="-application org.eclipse.equinox.p2.director.app.application" />
			<arg line="-nosplash" />
			<arg line="--launcher.suppressErrors" />
			<arg line="-consoleLog" />
			<arg line="-installIU ${p2.IU}" />
			<arg line="-version ${p2.version}" />
			<arg line="-p2.os ${p2.os}" />
			<arg line="-p2.ws ${p2.ws}" />
			<arg line="-p2.arch ${p2.arch}" />
			<arg line="-roaming" />
			<arg line="-profile ${p2.profile}" />
			<arg line="-profileProperties org.eclipse.update.install.features=true" />
			<arg line="-metadataRepository ${p2.metadata.repo}" />
			<arg line="-artifactRepository ${p2.artifact.repo}" />
			<arg line="-destination ${p2.director.install.path}" />
			<arg line="-bundlepool ${p2.director.install.path}" />
			<arg line="-vmargs -Xmx1024m" />
			<arg line="-Declipse.p2.data.area=${p2.director.install.path}/p2" />
		</exec>
		
		<!-- delete the metadata cache as well as the artifacts for unzipped bundles -->
		<delete failonerror="false" includeEmptyDirs="true" dir="${p2.director.install.path}/p2/org.eclipse.equinox.p2.core/cache" />
	</target>

</project>